0.2.2 (2013-08-22)
------------------

Features
~~~~~~~~

- Added post-success JavaScript hooks for common actions as well as custom JS

- Shorthand validation is now allowed for dynamically inserted nodes

- Added Python 3.3 support

- Implemented a 'validator' method for Form that allows one-off validation for 
  validation logic that is specific to that form only

- Added new 'render_success' and 'error_success' attributes for Form to specify
  a JavaScript function to replace the default callback in the JS api
  
- css_style, disable, and css_class are now Node attributes that can be used in
  templates

- Added a new FileNode for uploading files with along with a MimeTypeValidator
  and associated template modifications

Bug Fixes
~~~~~~~~

- Documentation fixes

- Setting title=False didn't function correctly

- Some class attribute override semantics didn't function as intended and have
  now been resolved

- Fixed a unicode encoding error identified by xen that was breaking validation

Maintenance/Stability
~~~~~~~~~~~~~~~~~~~~~

- Moved some functionality out of the metaclass to be more lazy, increasing the
  initialization speed of classes and improving testing

- Wrote many additional tests and significantly improved assertion coverage

- Completely re-organized tests to be organized less haphazzardly and updated 
  /extended their comments significantly.

- Setup coveralls and Travis CI

- Gave the whole codebase a PyLint and PEP8 pass

0.2.1 (2013-07-03)
------------------

Features
~~~~~~~~

- Added a method to easily change error statuses after validation methods are
  run

Bug Fixes
~~~~~~~~

- Textarea template whitespace was causing undesirable rendering

- Updated the Button Node to use the proper template inheritence

- Modified insert_validator to accept iterables as the other insert function
  does

- Fixed a documentation bug giving the wrong attribute name for an action

Maintenance/Stability
~~~~~~~~~~~~~~~~~~~~~

- Wrote tests for all new features

- Expanded details in minor places in documentation

- Added checking on attribute name collisions with Nodes to make the mistakes
  easier to debug


0.2.0 (2013-06-28)
------------------

Features
~~~~~~~~

- Added some more built-in Nodes and Validators such as
  StrongPasswordValidator, MatchingValidator, RegexValidator, CheckboxNode,
  etc.

- Refactored all validation functions to return both a success bool value
  alongside its output, making post-validation logic more clear and concise.

Refactor for Client Side Funcionality
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Completely re-wrote the JavaScript library into a jQuery plugin.

- Moved the selection loigc for Nodes that are "ready" to be validated into
  server side, incurring marginal overheads.

- Changed the error_render call semantics to track which Nodes have errors and
  intelligently call the function.

- Improved error rendering to support multiple errors.

- Re-designed the semantic which finds the HTML node in which to place errors
  on a per Node basis. json_identifiers function now passes these details to
  the client side code allowing more flexible rendering.

- Allowed per-Node logic for deciding if the Node is ready to be validated
  based on a list of visited Nodes.

- Added a more robust render_success method that allows passing arbitrary
  information to drive things like redirects, etc.

Documentation
~~~~~~~~~~~~~

- Large expansions in the documentation in almost all areas. More should be
  coming steadily in the next few weeks.

- Re-wrote the yota_examples repository for improved clarity and commenting.

Maintenance/Stability
~~~~~~~~~~~~~~~~~~~~~

- Introduced simple functional tests to attempt coverage for behaviour that
  cannot be unit tested

- Added commenting and specificity to existing unit tests

- Added more unit tests to regain near 100% coverage. Touch ups to come soon.

0.1.6 (2013-06-26)
------------------

Bug fixes
~~~~~~~~~

- Fixed textarea node not passing data properly

- Bug related to passing lists of validators into the shorthand for nodes

- Minor issue removing the deep copy with new breaking multi-form pages with
  dynamic options

0.1.5 (2013-06-09)
------------------

Maintenance/Stability
~~~~~~~~~~~~~~~~~~~~~

- Put the project under the new-BSD license.

- Some commenting cleanup

- Increased test coverage to 100% and improved quality of assertions.  Caught
  several bugs in the process, leading to numerous minor bug fixes.

- Fixed PEP8 compliance.

Bug fixes
~~~~~~~~~

- JavaScript bugs related to AJAX.

- Fixed several bugs related to operation in Python 2.6. All tests now pass
  with 2.6.

- Fixed a significant bug in which many class attributes should have been
  instance attributes, and thus cropping up strange errors.

Features
~~~~~~~~

- Beginnings of some functional tests

- Added optional redirect on AJAX success

- Added new grouped elements node designed for radio buttons.

- Allowed easily overriding the action of a form with a keyword attribute
  passed to the start node or the form kwargs.

0.1.0 (2013-06-07)
----------------
Initial release.
